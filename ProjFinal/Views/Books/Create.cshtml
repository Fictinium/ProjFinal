@model ProjFinal.Models.Book

@{
    ViewData["Title"] = "Criar Livro";
}

<h1>Criar um Livro</h1>

<hr />
<div class="row">
    <div class="col-md-8">
        <form asp-action="Create" method="post" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <!-- Título -->
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>

            <!-- Autor -->
            <div class="form-group">
                <label asp-for="Author" class="control-label"></label>
                <input asp-for="Author" class="form-control" />
                <span asp-validation-for="Author" class="text-danger"></span>
            </div>

            <!-- Descrição -->
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <textarea asp-for="Description" class="form-control" rows="5"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>

            <!-- Preço -->
            <div class="form-group">
                <label asp-for="AuxPrice" class="control-label"></label>
                <input asp-for="AuxPrice" class="form-control" />
                <span asp-validation-for="AuxPrice" class="text-danger"></span>
            </div>

            <!-- Data de Publicação -->
            <div class="form-group">
                <label asp-for="PublishedDate" class="control-label"></label>
                <input asp-for="PublishedDate" type="date" class="form-control" />
                <span asp-validation-for="PublishedDate" class="text-danger"></span>
            </div>

            <!-- Ficheiro (Livro) -->
            <div class="form-group">
                <label class="control-label">Ficheiro do Livro</label>
                <input name="BookFile" type="file" class="form-control" accept=".pdf" />
                <span asp-validation-for="BookFile" class="text-danger"></span>
            </div>

            <!-- Categorias -->
            <div class="form-group">
                <label asp-for="Categories" class="control-label"></label>

                <div class="input-group mb-2">
                    <select id="categoryDropdown" class="form-control">
                        <option value="" disabled selected>-- Selecione uma categoria --</option>
                        @foreach (var item in (MultiSelectList)ViewBag.CategoryList)
                        {
                            <option value="@item.Value">@item.Text</option>
                        }
                    </select>
                    <button type="button" class="btn btn-outline-primary" onclick="addCategory()">Adicionar</button>
                </div>

                <ul id="selectedCategories" class="list-group mb-2">
                    <!-- Categorias adicionadas dinamicamente a partir de JS -->
                </ul>

                <!-- "Hidden inputs" enviados ao Controller -->
                <div id="selectedCategoryInputs"></div>

                <span asp-validation-for="Categories" class="text-danger"></span>
            </div>

            <!-- Páginas do Livro -->
            <div class="form-group">
                <label class="control-label">Páginas do Livro</label>
                <input type="file" name="pageImages" multiple class="form-control" accept=".jpg,.jpeg,.png" />
            </div>

            <div class="form-group mt-3">
                <input type="submit" value="Criar" class="btn btn-primary" />
                <a asp-action="Index" class="btn btn-secondary">Cancelar</a>
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Voltar</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        function addCategory() {
            const dropdown = document.getElementById("categoryDropdown");
            const selectedValue = dropdown.value;
            const selectedText = dropdown.options[dropdown.selectedIndex].text;

            if (!selectedValue || selectedValue === "" || document.getElementById("cat-li-" + selectedValue))
                return; // Evitar cópias (duplicates)

            // Adicionar à lista
            const li = document.createElement("li");
            li.id = "cat-li-" + selectedValue;
            li.className = "list-group-item d-flex justify-content-between align-items-center";
            li.innerHTML = `
                <span>${selectedText}</span>
                <button type="button" class="btn btn-sm btn-danger" onclick="removeCategory('${selectedValue}')">Remover</button>
            `;
            document.getElementById("selectedCategories").appendChild(li);

            // Adicionar "hidden input"
            const input = document.createElement("input");
            input.type = "hidden";
            input.name = "selectedCategoryIds";
            input.value = selectedValue;
            input.id = "cat-input-" + selectedValue;
            document.getElementById("selectedCategoryInputs").appendChild(input);
        }

        function removeCategory(id) {
            document.getElementById("cat-li-" + id)?.remove();
            document.getElementById("cat-input-" + id)?.remove();
        }
    </script>
}
